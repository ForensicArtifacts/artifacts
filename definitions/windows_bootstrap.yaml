# These are bootstrap artifacts that are used to build the core knowledgebase
# used for interpolation in the rest of the artifacts.

name: AllUsersAppDataEnvironmentVariable
doc: The %ProgramData% environment variable.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\ProfileList', value: 'ProgramData'}]}
provides: [environ_allusersappdata]
supported_os: [Windows]
urls: ['http://environmentvariables.org/ProgramData']
---
name: AllUsersProfileEnvironmentVariable
doc: The %AllUsersProfile% environment variable.
sources:
- type: REGISTRY_KEY
  attributes:
    keys:
      - 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\ProfileList\ProfilesDirectory'
      - 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\ProfileList\AllUsersProfile'
provides: [environ_allusersprofile]
supported_os: [Windows]
urls: ['http://support.microsoft.com/kb//214653']
---
name: CurrentControlSet
doc: The control set the system is currently using.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\System\Select', value: 'Current'}]}
provides: [current_control_set]
supported_os: [Windows]
urls: ['https://github.com/libyal/winreg-kb/wiki/System-keys']
---
name: UserShellFolders
doc: The Shell Folders information for Windows users.
sources:
- type: REGISTRY_KEY
  attributes:
    keys:
      - 'HKEY_USERS\%%users.sid%%\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders\*'
      - 'HKEY_USERS\%%users.sid%%\Environment\*'
      - 'HKEY_USERS\%%users.sid%%\Volatile Environment\*'
provides:
  - users.cookies
  - users.appdata
  - users.personal
  - users.startup
  - users.homedir
  - users.desktop
  - users.internet_cache
  - users.localappdata
  - users.localappdata_low
  - users.recent
  - users.userprofile
  - users.temp
supported_os: [Windows]
---
name: WindowsCodePage
doc: The code page of the system.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Control\Nls\CodePage', value: 'ACP'}]}
provides: [code_page]
supported_os: [Windows]
urls: ['http://en.wikipedia.org/wiki/Windows_code_page']
---
name: WindowsComputerName
doc: The name of the system.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Control\ComputerName\ComputerName', value: 'ComputerName'}]}
provides: [hostname]
supported_os: [Windows]
---
name: WindowsDomainName
doc: The domain the system is connected to.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Services\Tcpip\Parameters', value: 'Domain'}]}
provides: [domain]
supported_os: [Windows]
---
name: WindowsEnvironmentVariablePath
doc: The %PATH% environment variable.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Control\Session Manager\Environment', value: 'Path'}]}
provides: [environ_path]
supported_os: [Windows]
urls: ['http://environmentvariables.org/WinDir']
---
name: WindowsEnvironmentVariableProgramFiles
doc: The %ProgramFiles% environment variable.
sources:
- type: PATH
  attributes:
    paths: ['\Program Files']
    separator: '\'
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion', value: 'ProgramFilesDir'}]}
provides: [environ_programfiles]
supported_os: [Windows]
urls: ['http://environmentvariables.org/ProgramFiles']
---
name: WindowsEnvironmentVariableProgramFilesX86
doc: The %ProgramFiles(x86)% environment variable.
sources:
- type: PATH
  attributes:
    paths: ['\Program Files (x86)']
    separator: '\'
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion', value: 'ProgramFilesDir (x86)'}]}
provides: [environ_programfilesx86]
supported_os: [Windows]
urls: ['http://environmentvariables.org/ProgramFiles']
---
name: WindowsEnvironmentVariableSystemDrive
doc: |
  The %SystemDrive% environment variable, usually "C:".

  This value isn't actually present in the Registry but with some parsing we
  can figure it out from SystemRoot.
sources:
- type: ARTIFACT_GROUP
  attributes: {names: ['WindowsEnvironmentVariableSystemRoot']}
provides: [environ_systemdrive]
supported_os: [Windows]
urls:
- 'http://environmentvariables.org/SystemDrive'
- 'https://msdn.microsoft.com/en-us/library/cc231436.aspx'
---
name: WindowsEnvironmentVariableSystemRoot
doc: The system root directory path, defined by %SystemRoot%, typically "C:\Windows".
sources:
- type: PATH
  attributes:
    paths:
      - '\Windows'
      - '\WinNT'
      - '\WINNT35'
      - '\WTSRV'
    separator: '\'
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion', value: 'SystemRoot'}]}
provides: [environ_systemroot]
supported_os: [Windows]
urls: ['http://environmentvariables.org/SystemRoot']
---
name: WindowsEnvironmentVariableTemp
doc: The %TEMP% environment variable.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Control\Session Manager\Environment', value: 'TEMP'}]}
provides: [environ_temp]
supported_os: [Windows]
urls: ['http://environmentvariables.org/Temp']
---
name: WindowsEnvironmentVariableWinDir
doc: The %WinDir% environment variable.
sources:
- type: PATH
  attributes:
    paths:
      - '\Windows'
      - '\WinNT'
      - '\WINNT35'
      - '\WTSRV'
    separator: '\'
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Control\Session Manager\Environment', value: 'windir'}]}
provides: [environ_windir]
supported_os: [Windows]
urls: ['http://environmentvariables.org/WinDir']
---
name: WindowsProductName
doc: The Windows product name
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion', value: 'ProductName'}]}
supported_os: [Windows]
urls: ['https://github.com/libyal/winreg-kb/blob/master/documentation/System%20keys.asciidoc']
---
name: WindowsRegistryProfiles
doc: |
  Get SIDs for all users on the system with profiles present in the Registry.

  This looks in the Windows Registry where the profiles are stored and retrieves
  the paths for each profile.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\ProfileList\*', value: 'ProfileImagePath'}]}
labels: [Users]
provides: [users.sid, users.userprofile, users.homedir, users.username]
supported_os: [Windows]
urls: ['http://msdn.microsoft.com/en-us/library/windows/desktop/bb776892(v=vs.85).aspx']
---
name: WindowsTimezone
doc: The timezone of the system in Olson format.
sources:
- type: REGISTRY_VALUE
  attributes: {key_value_pairs: [{key: '%%current_control_set%%\Control\TimeZoneInformation', value: 'StandardName'}]}
provides: [time_zone]
supported_os: [Windows]
urls: ['https://github.com/libyal/winreg-kb/wiki/Time-zone-keys']
---
name: WMIAccountUsersDomain
doc: |
  Fill out user AD domain information based on username.

  We expect this artifact to be collected with WindowsRegistryProfiles
  to supply the rest of the user information. This artifact optimizes retrieval
  of user information by limiting the WMI query to users for which we have
  a username for. Specifically this solves the issue that in a domain setting,
  querying for all users via WMI will give you the list of all local and domain
  accounts which means a large data transfer from an Active Directory server.
  This artifact relies on having the users.username field populated in the knowledge
  base. Unfortunately even limiting by username this query can be slow, and
  this artifact runs it for each user present on the system.
sources:
- type: WMI
  attributes: {query: SELECT * FROM Win32_UserAccount WHERE name='%%users.username%%'}
labels: [Users]
provides: [users.userdomain]
supported_os: [Windows]
urls: ['http://msdn.microsoft.com/en-us/library/windows/desktop/aa394507(v=vs.85).aspx']
---
name: WMIProfileUsersHomeDir
doc: |
  Get user homedir from Win32_UserProfile based on a known user's SID.

  This artifact relies on having the SID field users.sid populated in the knowledge
  base. We expect it to be collected with WindowsRegistryProfiles to
  supply the rest of the user information.
sources:
- type: WMI
  attributes: {query: SELECT * FROM Win32_UserProfile WHERE SID='%%users.sid%%'}
labels: [Users]
provides: [users.homedir]
supported_os: [Windows]
urls: ['http://msdn.microsoft.com/en-us/library/windows/desktop/ee886409(v=vs.85).aspx']
